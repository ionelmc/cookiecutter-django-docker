version: "{{ cookiecutter.docker_compose_version }}"

x-python:
  &python
  build:
    context: .
    dockerfile: docker/python/Dockerfile
    args:
      REQUIREMENTS: base
      DJANGO_SETTINGS_MODULE:
  environment:
    PYTHONHUNTER:
    PYTHONHUNTERCONFIG:
    DJANGO_DEBUG:
    DJANGO_DEBUG_SQL:
    DJANGO_DEBUG_TOOLBAR:
  env_file:
    - .env
  tty: false
  volumes:
    - .:/app
    - ./.home:/root
    - ./.home:/home/app
    - ./.home/media:/var/app/media
services:
  pg:
    build:
      context: docker/postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    command: [
        "postgres",
      #      "-c", "log_statement=all",
      #      "-c", "log_duration=true",
      #      "-c", "log_disconnections=true",
      #      "-c", "log_connections=true",
        "-c", "log_lock_waits=true",
        "-c", "log_min_error_statement=WARNING",
        "-c", "log_min_duration_statement=1s",
    ]
    volumes:
      - .:/app
      - ./.home:/root

  mc:
    image: memcached:{{ cookiecutter.memcached_version }}

  redis:
    image: redis:{{ cookiecutter.redis_version }}

  cron:
    <<: *python
    depends_on:
      - pg
    entrypoint: [ "/entrypoint.sh" ]
    command: [ "pysu", "app", "yacron", "--config=/etc/app/yacron.yml" ]

  web:
    <<: *python
    depends_on:
    - pg
    - mc
    - redis
    entrypoint: [ "/entrypoint.sh" ]

  celery:
    <<: *python
    entrypoint: [ "/entrypoint.sh" ]
    command: [ "pysu", "app", "celery", "-A", "{{ cookiecutter.django_project_name }}", "worker" ]
    depends_on:
    - pg
    - redis
